parameters:
  service_bus.services_map: []
  service_bus.default_destination_topic: ''
  service_bus.default_destination_key: ''

  service_bus.environment: ''
  service_bus.entry_point: ''
  service_bus.root_directory: ''

  # Decoder relation
  service_bus.decoder_configuration: []
  # -'custom_encoder_key': 'custom_decoder_id'

services:
  _defaults:
    autowire: false
    autoconfigure: false
    public: false

  # Symfony serializer message decoder
  service_bus.decoder.default_handler:
    class: ServiceBus\MessageSerializer\Symfony\SymfonyJsonObjectSerializer

  ServiceBus\MessageSerializer\ObjectSerializer:
    class: ServiceBus\MessageSerializer\Symfony\SymfonyJsonObjectSerializer

  service_bus.decoder.service_locator:
    class: Symfony\Component\DependencyInjection\ServiceLocator
    tags: ['container.service_locator']
    arguments:
      - service_bus.decoder.default_handler: '@service_bus.decoder.default_handler'

  # Application environment
  ServiceBus\Environment:
    factory: ['ServiceBus\Environment', 'create']
    arguments:
      $environment: '%service_bus.environment%'

  # Default logger instance
  service_bus.logger:
    class: Psr\Log\NullLogger

  # Detect blocking ticks in an event loop
  ServiceBus\Infrastructure\Watchers\LoopBlockWatcher:
    arguments:
      $logger: '@service_bus.logger'

  # Periodic forced launch of the garbage collector
  ServiceBus\Infrastructure\Watchers\GarbageCollectorWatcher:
    arguments:
      $interval: 600000
      $logger: '@service_bus.logger'

  # Attributes reader
  ServiceBus\AnnotationsReader\Reader:
    class: ServiceBus\AnnotationsReader\AttributesReader

  # Retrieving a list of message handlers for the specified object
  ServiceBus\Services\Configuration\ServiceHandlersLoader:
    class: ServiceBus\Services\Configuration\AttributeServiceHandlersLoader
    arguments:
      $attributesReader: '@ServiceBus\AnnotationsReader\Reader'

  # Internal kernel locator
  service_bus.public_services_locator:
    public: true
    class: Symfony\Component\DependencyInjection\ServiceLocator
    tags: ['container.service_locator']
    arguments:
      - service_bus.logger: '@service_bus.logger'
        ServiceBus\Transport\Common\Transport: '@ServiceBus\Transport\Common\Transport'
        ServiceBus\EntryPoint\EntryPoint: '@ServiceBus\EntryPoint\EntryPoint'
        ServiceBus\Infrastructure\Watchers\LoopBlockWatcher: '@ServiceBus\Infrastructure\Watchers\LoopBlockWatcher'
        ServiceBus\Infrastructure\Watchers\GarbageCollectorWatcher: '@ServiceBus\Infrastructure\Watchers\GarbageCollectorWatcher'
        ServiceBus\Endpoint\Endpoint: '@ServiceBus\Endpoint\Endpoint'
        ServiceBus\Endpoint\EndpointRouter: '@ServiceBus\Endpoint\EndpointRouter'

  # Incoming message decoder
  ServiceBus\EntryPoint\IncomingMessageDecoder:
    arguments:
      $decodersConfiguration: '%service_bus.decoder_configuration%'
      $decodersLocator: '@service_bus.decoder.service_locator'

  # Context
  ServiceBus\Endpoint\Options\DeliveryOptionsFactory:
    class: ServiceBus\Endpoint\Options\DefaultDeliveryOptionsFactory

  ServiceBus\Context\ContextFactory:
    class: ServiceBus\Context\KernelContextFactory
    arguments:
      $endpointRouter: '@ServiceBus\Endpoint\EndpointRouter'
      $optionsFactory: '@ServiceBus\Endpoint\Options\DeliveryOptionsFactory'
      $logger: '@service_bus.logger'

  # Default message retry strategy
  ServiceBus\Common\EntryPoint\Retry\RetryStrategy:
    class: ServiceBus\Retry\NullRetryStrategy

  # Handling incoming package
  ServiceBus\EntryPoint\EntryPointProcessor:
    class: ServiceBus\EntryPoint\DefaultEntryPointProcessor
    arguments:
      $messageDecoder: '@ServiceBus\EntryPoint\IncomingMessageDecoder'
      $contextFactory: '@ServiceBus\Context\ContextFactory'
      $messagesRouter: '@ServiceBus\MessagesRouter\Router'
      $logger: '@service_bus.logger'
      $retryStrategy: '@ServiceBus\Common\EntryPoint\Retry\RetryStrategy'

  # Application entry point
  ServiceBus\EntryPoint\EntryPoint:
    arguments:
      $transport: '@ServiceBus\Transport\Common\Transport'
      $processor: '@ServiceBus\EntryPoint\EntryPointProcessor'
      $logger: '@service_bus.logger'
      $maxConcurrentTaskCount: 60
      $awaitDelay: 40

  # Isolated service locator for routing configuration
  service_bus.routing_configuration_locator:
    class: Symfony\Component\DependencyInjection\ServiceLocator
    tags: ['container.service_locator']
    arguments:
      - ServiceBus\Services\Configuration\ServiceHandlersLoader: '@ServiceBus\Services\Configuration\ServiceHandlersLoader'

  # Resolve message object
  ServiceBus\ArgumentResolvers\MessageArgumentResolver:

  # Resolve execution context
  ServiceBus\ArgumentResolvers\ContextArgumentResolver:

  # Resolve autowire dependencies
  ServiceBus\ArgumentResolvers\ContainerArgumentResolver:
    arguments:
      # see TaggedMessageHandlersCompilerPass::process
      $serviceLocator: '@service_bus.services_locator'
    tags: ['service_bus_argument_resolver']

  # Default message executor factory
  ServiceBus\Common\MessageExecutor\MessageExecutorFactory:
    class: ServiceBus\MessageExecutor\DefaultMessageExecutorFactory
    arguments:
      $argumentResolvers:
        - '@ServiceBus\ArgumentResolvers\MessageArgumentResolver'
        - '@ServiceBus\ArgumentResolvers\ContextArgumentResolver'
        - '@ServiceBus\ArgumentResolvers\ContainerArgumentResolver'
      $validator: ~

  # Default transport implementation
  ServiceBus\Transport\Common\Transport:

  # Default transport level destination
  ServiceBus\Transport\Common\DeliveryDestination:

  # Application level transport endpoint
  ServiceBus\Endpoint\Endpoint:
    class: ServiceBus\Endpoint\MessageDeliveryEndpoint
    arguments:
      $name: 'application'
      $transport: '@ServiceBus\Transport\Common\Transport'
      $destination: '@ServiceBus\Transport\Common\DeliveryDestination'
      $encoder: null

  # Outbound message routing
  ServiceBus\Endpoint\EndpointRouter:
    arguments:
      $defaultEndpoint: '@ServiceBus\Endpoint\Endpoint'

  # Service bus messages router configuration
  ServiceBus\Services\MessagesRouterConfigurator:
    arguments:
      $executorFactory: '@ServiceBus\Common\MessageExecutor\MessageExecutorFactory'
      $servicesList: '%service_bus.services_map%'
      $routingServiceLocator: '@service_bus.routing_configuration_locator'
      $servicesServiceLocator: '@service_bus.services_locator'

  # Chain router configurator
  ServiceBus\MessagesRouter\ChainRouterConfigurator:
    calls:
      - method: addConfigurator
        arguments:
          - '@ServiceBus\Services\MessagesRouterConfigurator'

  # Incoming messages router
  ServiceBus\MessagesRouter\Router:
    configurator: ['@ServiceBus\MessagesRouter\ChainRouterConfigurator', configure]

  # Mutexes service
  ServiceBus\Mutex\MutexService:
    class: ServiceBus\Mutex\InMemory\InMemoryMutexService

  # Connection pool for http client
  Amp\Http\Client\Connection\ConnectionPool:
    factory: ['ServiceBus\HttpClient\Artax\ConnectionPollFactory', 'build']

  # Application http client
  ServiceBus\HttpClient\HttpClient:
    class: ServiceBus\HttpClient\Artax\ArtaxHttpClient
    factory: ['ServiceBus\HttpClient\Artax\ArtaxHttpClient', 'build']
    arguments:
      $connectionPool: '@Amp\Http\Client\Connection\ConnectionPool'
      $logger: '@service_bus.logger'
